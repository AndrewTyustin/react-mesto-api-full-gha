{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\EPIX\\\\Desktop\\\\praktikum\\\\react-mesto-api-full-gha\\\\frontend\\\\src\\\\components\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Route, Switch, useHistory } from \"react-router-dom\";\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\nimport ImagePopup from \"./ImagePopup\";\nimport PopupEditAvatar from \"./PopupEditAvatar\";\nimport PopupEditProfile from \"./PopupEditProfile\";\nimport PopupAddCard from \"./PopupAddCard\";\nimport ProtectedRoute from \"./ProtectedRoute\";\nimport Register from \"./Register\";\nimport Login from \"./Login\";\nimport CurrentUserContext from \"../contexts/CurrentUserContext\";\nimport apiConnect from \"../utils/Api\";\nimport apiAuth from \"../utils/AuthApi\";\nimport InfoTooltip from \"./InfoTooltip\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [isImageOpen, setIsImageOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState({});\n  const [cards, setCards] = useState([]);\n  const [currentUser, setCurrentUser] = useState({});\n  const [email, setEmail] = useState(\"\");\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [status, setStatus] = useState(false);\n  const [tooltipOpen, setTooltipOpen] = useState(false);\n  const history = useHistory();\n  useEffect(() => {\n    isLoggedIn && Promise.all([apiConnect.getUserData(), apiConnect.getInitialCards()]).then(_ref => {\n      let [userItem, initialCards] = _ref;\n      setCurrentUser(userItem);\n      setCards(initialCards);\n    }).catch(err => {\n      console.log(`Возникла глобальная ошибка, ${err}`);\n    });\n  }, [history, isLoggedIn]);\n  useEffect(() => {\n    const userToken = localStorage.getItem(\"token\");\n    if (userToken) {\n      apiAuth.tokenVerification(userToken).then(res => {\n        setEmail(res.data.email);\n        setIsLoggedIn(true);\n        history.push(\"/\");\n      }).catch(err => {\n        console.log(`Возникла ошибка верификации токена, ${err}`);\n      });\n    }\n  }, [history, isLoggedIn]);\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n  function handleCardDelete(card) {\n    apiConnect.deleteCard(card._id).then(() => {\n      setCards(cardsArray => cardsArray.filter(cardItem => cardItem._id !== card._id));\n    }).catch(err => {\n      console.log(`Возникла ошибка при удалении карточки, ${err}`);\n    });\n  }\n  function handleUpdateAvatar(link) {\n    apiConnect.sendAvatarData(link).then(res => {\n      setCurrentUser(res);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(`Возникла ошибка при изменении аватара, ${err}`);\n    });\n  }\n  function handleCardClick(cardItem) {\n    setIsImageOpen(true);\n    setSelectedCard({\n      ...selectedCard,\n      name: cardItem.name,\n      link: cardItem.link\n    });\n  }\n  function handleCardLike(card) {\n    const isLiked = card.likes.some(cardItem => cardItem._id === currentUser._id);\n    apiConnect.changeLikeCardStatus(card._id, !isLiked).then(cardsItem => {\n      setCards(state => state.map(cardItem => cardItem._id === card._id ? cardsItem : cardItem));\n    }).catch(err => {\n      console.log(`Возникла ошибка при обработке лайков, ${err}`);\n    });\n  }\n  function handleUpdateUser(userItem) {\n    apiConnect.sendUserData(userItem.name, userItem.about).then(res => {\n      setCurrentUser(res);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(`Возникла ошибка при редактировании профиля, ${err}`);\n    });\n  }\n  function handleAddCard(cardItem) {\n    apiConnect.addNewCard(cardItem.name, cardItem.link).then(card => {\n      setCards([card, ...cards]);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(`Возникла ошибка при добавлении новой карточки, ${err}`);\n    });\n  }\n  function closeAllPopups() {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsImageOpen(false);\n    setTooltipOpen(false);\n  }\n  function handleRegister(password, email) {\n    apiAuth.userRegistration(password, email).then(() => {\n      setTooltipOpen(true);\n      setStatus(true);\n    }).catch(err => {\n      console.log(`Возникла ошибка при регистрации пользователя, ${err}`);\n      setTooltipOpen(true);\n      setStatus(false);\n    });\n  }\n  function handleLogin(password, email) {\n    apiAuth.userAuthorization(password, email).then(res => {\n      if (res.token) {\n        localStorage.setItem(\"token\", res.token);\n        setEmail(email);\n        setIsLoggedIn(true);\n        history.push(\"/\");\n      }\n    }).catch(err => {\n      console.log(`Возникла ошибка при авторизации, ${err}`);\n      setTooltipOpen(true);\n      setStatus(false);\n    });\n  }\n  // Функция выхода пользователя\n  function handleLogout() {\n    localStorage.removeItem(\"token\");\n    setIsLoggedIn(false);\n  }\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        isLoggedIn: isLoggedIn,\n        email: email,\n        isLogout: handleLogout\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          exact: true,\n          path: \"/\",\n          isLoggedIn: isLoggedIn,\n          component: Main,\n          onEditAvatar: handleEditAvatarClick,\n          onEditProfile: handleEditProfileClick,\n          onAddPlace: handleAddPlaceClick,\n          onCardClick: handleCardClick,\n          onCardDelete: handleCardDelete,\n          onCardLike: handleCardLike,\n          cards: cards\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: `/sign-in`,\n          children: /*#__PURE__*/_jsxDEV(Login, {\n            handleLogin: handleLogin,\n            isOpen: tooltipOpen,\n            onClose: closeAllPopups,\n            status: status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: `/sign-up`,\n          children: /*#__PURE__*/_jsxDEV(Register, {\n            handleRegister: handleRegister,\n            isOpen: tooltipOpen,\n            onClose: closeAllPopups,\n            status: status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PopupEditAvatar, {\n        isOpen: isEditAvatarPopupOpen,\n        onClose: closeAllPopups,\n        onUpdateAvatar: handleUpdateAvatar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PopupEditProfile, {\n        isOpen: isEditProfilePopupOpen,\n        onClose: closeAllPopups,\n        onUpdateUser: handleUpdateUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PopupAddCard, {\n        isOpen: isAddPlacePopupOpen,\n        onClose: closeAllPopups,\n        onAddPlace: handleAddCard\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n        isOpen: isImageOpen,\n        onClose: closeAllPopups,\n        card: selectedCard\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InfoTooltip, {\n        isOpen: tooltipOpen,\n        onClose: closeAllPopups,\n        status: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 180,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"txH8145OaO9GLes7H0HPxw85xI8=\", false, function () {\n  return [useHistory];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Route","Switch","useHistory","Header","Main","Footer","ImagePopup","PopupEditAvatar","PopupEditProfile","PopupAddCard","ProtectedRoute","Register","Login","CurrentUserContext","apiConnect","apiAuth","InfoTooltip","App","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isImageOpen","setIsImageOpen","selectedCard","setSelectedCard","cards","setCards","currentUser","setCurrentUser","email","setEmail","isLoggedIn","setIsLoggedIn","status","setStatus","tooltipOpen","setTooltipOpen","history","Promise","all","getUserData","getInitialCards","then","userItem","initialCards","catch","err","console","log","userToken","localStorage","getItem","tokenVerification","res","data","push","handleEditAvatarClick","handleEditProfileClick","handleAddPlaceClick","handleCardDelete","card","deleteCard","_id","cardsArray","filter","cardItem","handleUpdateAvatar","link","sendAvatarData","closeAllPopups","handleCardClick","name","handleCardLike","isLiked","likes","some","changeLikeCardStatus","cardsItem","state","map","handleUpdateUser","sendUserData","about","handleAddCard","addNewCard","handleRegister","password","userRegistration","handleLogin","userAuthorization","token","setItem","handleLogout","removeItem"],"sources":["C:/Users/EPIX/Desktop/praktikum/react-mesto-api-full-gha/frontend/src/components/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Route, Switch, useHistory } from \"react-router-dom\";\r\nimport Header from \"./Header\";\r\nimport Main from \"./Main\";\r\nimport Footer from \"./Footer\";\r\nimport ImagePopup from \"./ImagePopup\";\r\nimport PopupEditAvatar from \"./PopupEditAvatar\";\r\nimport PopupEditProfile from \"./PopupEditProfile\";\r\nimport PopupAddCard from \"./PopupAddCard\";\r\nimport ProtectedRoute from \"./ProtectedRoute\";\r\nimport Register from \"./Register\";\r\nimport Login from \"./Login\";\r\nimport CurrentUserContext from \"../contexts/CurrentUserContext\";\r\nimport apiConnect from \"../utils/Api\";\r\nimport apiAuth from \"../utils/AuthApi\";\r\nimport InfoTooltip from \"./InfoTooltip\";\r\n\r\nfunction App() {\r\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\r\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\r\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\r\n  const [isImageOpen, setIsImageOpen] = useState(false);\r\n  const [selectedCard, setSelectedCard] = useState({});\r\n  const [cards, setCards] = useState([]);\r\n  const [currentUser, setCurrentUser] = useState({});\r\n  const [email, setEmail] = useState(\"\");\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [status, setStatus] = useState(false);\r\n  const [tooltipOpen, setTooltipOpen] = useState(false);\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    isLoggedIn &&\r\n    Promise.all([apiConnect.getUserData(), apiConnect.getInitialCards()])\r\n      .then(([userItem, initialCards]) => {\r\n        setCurrentUser(userItem);\r\n        setCards(initialCards);\r\n      })\r\n      .catch((err) => {\r\n        console.log(`Возникла глобальная ошибка, ${err}`);\r\n      });\r\n  }, [history, isLoggedIn]);\r\n  useEffect(() => {\r\n    const userToken = localStorage.getItem(\"token\");\r\n    if (userToken) {\r\n      apiAuth\r\n        .tokenVerification(userToken)\r\n        .then((res) => {\r\n          setEmail(res.data.email);\r\n          setIsLoggedIn(true);\r\n          history.push(\"/\");\r\n        })\r\n        .catch((err) => {\r\n          console.log(`Возникла ошибка верификации токена, ${err}`);\r\n        });\r\n    }\r\n  }, [history, isLoggedIn]);\r\n  function handleEditAvatarClick() {\r\n    setIsEditAvatarPopupOpen(true);\r\n  }\r\n  function handleEditProfileClick() {\r\n    setIsEditProfilePopupOpen(true);\r\n  }\r\n  function handleAddPlaceClick() {\r\n    setIsAddPlacePopupOpen(true);\r\n  }\r\n  function handleCardDelete(card) {\r\n    apiConnect\r\n      .deleteCard(card._id)\r\n      .then(() => {\r\n        setCards((cardsArray) =>\r\n          cardsArray.filter((cardItem) => cardItem._id !== card._id)\r\n        );\r\n      })\r\n      .catch((err) => {\r\n        console.log(`Возникла ошибка при удалении карточки, ${err}`);\r\n      });\r\n  }\r\n  function handleUpdateAvatar(link) {\r\n    apiConnect\r\n      .sendAvatarData(link)\r\n      .then((res) => {\r\n        setCurrentUser(res);\r\n        closeAllPopups();\r\n      })\r\n      .catch((err) => {\r\n        console.log(`Возникла ошибка при изменении аватара, ${err}`);\r\n      });\r\n  }\r\n  function handleCardClick(cardItem) {\r\n    setIsImageOpen(true);\r\n    setSelectedCard({\r\n      ...selectedCard,\r\n      name: cardItem.name,\r\n      link: cardItem.link,\r\n    });\r\n  }\r\n  function handleCardLike(card) {\r\n    const isLiked = card.likes.some(\r\n      (cardItem) => cardItem._id === currentUser._id\r\n    );\r\n    apiConnect\r\n      .changeLikeCardStatus(card._id, !isLiked)\r\n      .then((cardsItem) => {\r\n        setCards((state) =>\r\n          state.map((cardItem) =>\r\n            cardItem._id === card._id ? cardsItem : cardItem\r\n          )\r\n        );\r\n      })\r\n      .catch((err) => {\r\n        console.log(`Возникла ошибка при обработке лайков, ${err}`);\r\n      });\r\n  }\r\n  function handleUpdateUser(userItem) {\r\n    apiConnect\r\n      .sendUserData(userItem.name, userItem.about)\r\n      .then((res) => {\r\n        setCurrentUser(res);\r\n        closeAllPopups();\r\n      })\r\n      .catch((err) => {\r\n        console.log(`Возникла ошибка при редактировании профиля, ${err}`);\r\n      });\r\n  }\r\n  function handleAddCard(cardItem) {\r\n    apiConnect\r\n      .addNewCard(cardItem.name, cardItem.link)\r\n      .then((card) => {\r\n        setCards([card, ...cards]);\r\n        closeAllPopups();\r\n      })\r\n      .catch((err) => {\r\n        console.log(`Возникла ошибка при добавлении новой карточки, ${err}`);\r\n      });\r\n  }\r\n  function closeAllPopups() {\r\n    setIsEditAvatarPopupOpen(false);\r\n    setIsEditProfilePopupOpen(false);\r\n    setIsAddPlacePopupOpen(false);\r\n    setIsImageOpen(false);\r\n    setTooltipOpen(false);\r\n  }\r\n  function handleRegister(password, email) {\r\n    apiAuth\r\n      .userRegistration(password, email)\r\n      .then(() => {\r\n        setTooltipOpen(true);\r\n        setStatus(true);\r\n      })\r\n      .catch((err) => {\r\n        console.log(`Возникла ошибка при регистрации пользователя, ${err}`);\r\n        setTooltipOpen(true);\r\n        setStatus(false);\r\n      });\r\n  }\r\n  function handleLogin(password, email) {\r\n    apiAuth\r\n      .userAuthorization(password, email)\r\n      .then((res) => {\r\n        if (res.token) {\r\n          localStorage.setItem(\"token\", res.token);\r\n          setEmail(email);\r\n          setIsLoggedIn(true);\r\n          history.push(\"/\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(`Возникла ошибка при авторизации, ${err}`);\r\n        setTooltipOpen(true);\r\n        setStatus(false);\r\n      });\r\n  }\r\n  // Функция выхода пользователя\r\n  function handleLogout() {\r\n    localStorage.removeItem(\"token\");\r\n    setIsLoggedIn(false);\r\n  }\r\n\r\n  return (\r\n    <CurrentUserContext.Provider value={currentUser}>\r\n      <div className=\"page\">\r\n        <Header isLoggedIn={isLoggedIn} email={email} isLogout={handleLogout} />\r\n        <Switch>\r\n          <ProtectedRoute\r\n            exact\r\n            path=\"/\"\r\n            isLoggedIn={isLoggedIn}\r\n            component={Main}\r\n            onEditAvatar={handleEditAvatarClick}\r\n            onEditProfile={handleEditProfileClick}\r\n            onAddPlace={handleAddPlaceClick}\r\n            onCardClick={handleCardClick}\r\n            onCardDelete={handleCardDelete}\r\n            onCardLike={handleCardLike}\r\n            cards={cards}\r\n          />\r\n          <Route path={`/sign-in`}>\r\n            <Login\r\n              handleLogin={handleLogin}\r\n              isOpen={tooltipOpen}\r\n              onClose={closeAllPopups}\r\n              status={status}\r\n            />\r\n          </Route>\r\n          <Route path={`/sign-up`}>\r\n            <Register\r\n              handleRegister={handleRegister}\r\n              isOpen={tooltipOpen}\r\n              onClose={closeAllPopups}\r\n              status={status}\r\n            />\r\n          </Route>\r\n        </Switch>\r\n        <Footer />\r\n        <PopupEditAvatar\r\n          isOpen={isEditAvatarPopupOpen}\r\n          onClose={closeAllPopups}\r\n          onUpdateAvatar={handleUpdateAvatar}\r\n        />\r\n        <PopupEditProfile\r\n          isOpen={isEditProfilePopupOpen}\r\n          onClose={closeAllPopups}\r\n          onUpdateUser={handleUpdateUser}\r\n        />\r\n        <PopupAddCard\r\n          isOpen={isAddPlacePopupOpen}\r\n          onClose={closeAllPopups}\r\n          onAddPlace={handleAddCard}\r\n        />\r\n        <ImagePopup\r\n          isOpen={isImageOpen}\r\n          onClose={closeAllPopups}\r\n          card={selectedCard}\r\n        />\r\n        <InfoTooltip\r\n          isOpen={tooltipOpen}\r\n          onClose={closeAllPopups}\r\n          status={status}\r\n        />\r\n      </div>\r\n    </CurrentUserContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}